class TreeNode:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None

def print_odd_level_nodes_stack(root):
    if not root:
        return

    stack = [(root, 1)]

    while stack:
        current, level = stack.pop()

        if level % 2 != 0:
            print(current.value)

        if current.right:
            stack.append((current.right, level + 1))
        if current.left:
            stack.append((current.left, level + 1))

def build_tree():
    value = int(input("Enter the value for the root node: "))
    root = TreeNode(value)
    
    queue = [root]
    
    while queue:
        current = queue.pop(0)
        left_value = input(f"Enter the left child value for {current.value} (or 'None' if no left child): ")
        if left_value.lower() != 'none':
            current.left = TreeNode(int(left_value))
            queue.append(current.left)
        
        right_value = input(f"Enter the right child value for {current.value} (or 'None' if no right child): ")
        if right_value.lower() != 'none':
            current.right = TreeNode(int(right_value))
            queue.append(current.right)
    
    return root

root = build_tree()
print("Nodes at odd levels:")
print_odd_level_nodes_stack(root)
